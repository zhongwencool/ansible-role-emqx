---
- name: Verify
  hosts: all
  gather_facts: false
  become: true

  tasks:
    - name: Wait for EMQX to be ready
      wait_for:
        port: "{{ emqx_tcp_port }}"
        timeout: 300
    - name: Wait for EMQX dashboard HTTP to be ready
      ansible.builtin.uri:
        url: "http://127.0.0.1:{{ emqx_dashboard_http_port }}/status"
        method: GET
        status_code: 200
      register: dashboard_http_status
      retries: 10
      delay: 5
      until: dashboard_http_status.status == 200
      changed_when: false
      when: emqx_dashboard_http_port is defined and emqx_dashboard_http_port != 0

    - name: Verify EMQX dashboard HTTP is accessible
      ansible.builtin.assert:
        that:
          - dashboard_http_status.status == 200
        fail_msg: "EMQX dashboard HTTP is not accessible"
        success_msg: "EMQX dashboard HTTP is accessible"
      when: emqx_dashboard_http_port is defined and emqx_dashboard_http_port != 0

    - name: Wait for EMQX dashboard HTTPS to be ready
      ansible.builtin.uri:
        url: "https://127.0.0.1:{{ emqx_dashboard_https_port }}/status"
        method: GET
        status_code: 200
      register: dashboard_https_status
      retries: 10
      delay: 5
      until: dashboard_https_status.status == 200
      changed_when: false
      when: emqx_dashboard_https_port is defined and emqx_dashboard_https_port != 0

    - name: Verify EMQX dashboard HTTPS is accessible
      ansible.builtin.assert:
        that:
          - dashboard_https_status.status == 200
        fail_msg: "EMQX dashboard HTTPS is not accessible"
        success_msg: "EMQX dashboard HTTPS is accessible"
      when: emqx_dashboard_https_port is defined and emqx_dashboard_https_port != 0
    - name: Check EMQX service status
      command: systemctl status emqx
      register: emqx_status
      changed_when: false
      failed_when: false

    - name: Verify EMQX is running
      assert:
        that:
          - "'active (running)' in emqx_status.stdout"
        fail_msg: "EMQX is not running"
        success_msg: "EMQX is running"

    - name: Wait for cluster formation
      command: emqx ctl cluster status --json
      register: cluster_status
      until: >
        (cluster_status.stdout | from_json).running_nodes |
        select('match', '^emqx@.*') |
        list | length >= 2
      retries: 10
      delay: 5
      changed_when: false
      failed_when: false
      ignore_errors: true

    - name: Print cluster status on retry failure
      debug:
        msg: "Cluster formation failed after retries. Current status: {{ cluster_status.stdout }}"
      when: cluster_status is failed

    - name: Display cluster status
      debug:
        var: cluster_status.stdout_lines
