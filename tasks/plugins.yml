---
- name: Get latest Guard-pro release tag
  ansible.builtin.uri:
    url: https://api.github.com/repos/zhongwencool/get-emqx-guard-pro/releases/latest
    return_content: true
  register: github_release
  tags: ['plugins']

- name: Set Guard-pro version
  ansible.builtin.set_fact:
    guard_pro_version: "{{ github_release.json.tag_name }}"
  tags: ['plugins']

- name: List Guard-pro plugins
  ansible.builtin.command: emqx_ctl plugins list
  register: plugins_list
  changed_when: false
  tags: ['plugins']

- name: Set Guard-pro version
  ansible.builtin.set_fact:
    guard_prev_pro_version: >-
      {%- set plugins = plugins_list.stdout | from_json -%}
      {%- if plugins is sequence and plugins | length > 0 -%}
        {%- set guard_pro = plugins | selectattr('name', 'eq', 'emqx_guard_pro') | list -%}
        {%- if guard_pro | length > 0 -%}
          {{- guard_pro[0].rel_vsn -}}
        {%- endif -%}
      {%- endif -%}
  tags: ['plugins']

- name: Disable Guard-pro plugin
  ansible.builtin.command: emqx_ctl plugins disable emqx_guard_pro-{{ guard_prev_pro_version }}
  when: guard_prev_pro_version !="" and guard_prev_pro_version != guard_pro_version
  register: disable_result
  changed_when: "'not_ok' not in disable_result.stdout"
  tags: ['plugins']

- name: Uninstall Guard-pro plugin
  ansible.builtin.command: emqx_ctl plugins uninstall emqx_guard_pro-{{ guard_prev_pro_version }}
  when: guard_prev_pro_version !="" and guard_prev_pro_version != guard_pro_version
  register: uninstall_result
  changed_when: "'not_ok' not in uninstall_result.stdout"
  tags: ['plugins']

- name: Download Guard-pro plugin
  ansible.builtin.get_url:
    url: "https://github.com/zhongwencool/get-emqx-guard-pro/releases/download/{{ guard_pro_version }}/emqx_guard_pro-{{ guard_pro_version }}.tar.gz"
    dest: "/tmp/emqx-{{ emqx_version }}/emqx_guard_pro-{{ guard_pro_version }}.tar.gz"
    mode: '0644'
  register: guard_pro_download
  tags: ['plugins']

- name: Download Guard-pro SHA256 checksum
  ansible.builtin.get_url:
    url: "https://github.com/zhongwencool/get-emqx-guard-pro/releases/download/{{ guard_pro_version }}/emqx_guard_pro-{{ guard_pro_version }}.sha256"
    dest: "/tmp/emqx-{{ emqx_version }}/emqx_guard_pro-{{ guard_pro_version }}.tar.gz.sha256"
    mode: '0644'
  tags: ['plugins']

- name: Verify Guard-pro plugin checksum
  ansible.builtin.shell: |
    set -o pipefail
    sha256sum emqx_guard_pro-{{ guard_pro_version }}.tar.gz | cut -d ' ' -f 1 > checksum.txt
    grep -f checksum.txt emqx_guard_pro-{{ guard_pro_version }}.tar.gz.sha256
  args:
    chdir: "/tmp/emqx-{{ emqx_version }}"
    executable: /bin/bash
  register: checksum_result
  failed_when: checksum_result.rc != 0
  changed_when: false
  tags: ['plugins']

- name: Move Guard-pro plugin  # noqa: no-handler
  ansible.builtin.copy:
    src: "/tmp/emqx-{{ emqx_version }}/emqx_guard_pro-{{ guard_pro_version }}.tar.gz"
    dest: "/usr/lib/emqx/plugins/emqx_guard_pro-{{ guard_pro_version }}.tar.gz"
    remote_src: true
    owner: "{{ emqx_user }}"
    group: "{{ emqx_group }}"
    mode: '0644'
  when: guard_pro_download.changed
  tags: ['plugins']

- name: Install Guard-pro plugin
  ansible.builtin.command: "emqx ctl plugins install emqx_guard_pro-{{ guard_pro_version }}"
  changed_when: false
  tags: ['plugins']

- name: Configure Guard-pro plugin
  ansible.builtin.template:
    src: emqx_guard_pro.conf.j2
    dest: /usr/lib/emqx/plugins/emqx_guard_pro-{{ guard_pro_version }}/emqx_guard_pro-{{ guard_pro_version }}/priv/config.hocon
    owner: "{{ emqx_user }}"
    group: "{{ emqx_group }}"
    mode: '0644'
  tags: ['plugins']

- name: Enable Guard-pro plugin
  ansible.builtin.command: emqx_ctl plugins enable emqx_guard_pro-{{ guard_pro_version }}
  changed_when: false
  tags: ['plugins']

- name: Restart Guard-pro plugin
  ansible.builtin.command: emqx_ctl plugins restart emqx_guard_pro-{{ guard_pro_version }}
  changed_when: false
  tags: ['plugins']

- name: Reload Guard-pro plugin config
  ansible.builtin.command: emqx_ctl guard load /usr/lib/emqx/plugins/emqx_guard_pro-{{ guard_pro_version }}/emqx_guard_pro-{{ guard_pro_version }}/priv/config.hocon
  changed_when: false
  tags: ['plugins']
