---
name: Molecule CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 6 * * 0'  # Run every Sunday at 6 AM UTC

jobs:
  molecule-static:
    name: Molecule Static
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distro:
          - debian11
          - debian12
          - ubuntu2004
          - ubuntu2204
          - amazonlinux2
          - amazonlinux2023
          - rockylinux8
          - rockylinux9
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          ./scripts/setup-test-env.sh

      - name: Display versions
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python --version
          ansible --version
          molecule --version

      - name: Run Static Scenario
        run: |
          python3 -m venv venv
          source venv/bin/activate
          # Set MOLECULE_IMAGE based on the distro
          export MOLECULE_IMAGE="geerlingguy/docker-${{ matrix.distro }}-ansible:latest"
          for i in {1..2}; do
            echo "Attempt static $i of 2"
            if MOLECULE_DISTRO=${{ matrix.distro }} molecule -vv test -s static; then
              break
            fi
            if [ $i -eq 2 ]; then
              echo "All 2 attempts for static scenario failed"
              exit 1
            fi
            echo "Attempt static $i failed, retrying..."
            sleep 15
          done
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}
          MOLECULE_NO_LOG: false

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: molecule-static-${{ matrix.distro }}
          path: |
            molecule/*/molecule.yml
            molecule/*/*.log
            molecule/*/reports/

  molecule-manual:
    name: Molecule Manual
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distro:
          - debian11
          - debian12
          - ubuntu2004
          - ubuntu2204
          - amazonlinux2
          - amazonlinux2023
          - rockylinux8
          - rockylinux9
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          ./scripts/setup-test-env.sh

      - name: Display versions
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python --version
          ansible --version
          molecule --version

      - name: Run Manual Scenario
        run: |
          python3 -m venv venv
          source venv/bin/activate
          # Set MOLECULE_IMAGE based on the distro
          export MOLECULE_IMAGE="geerlingguy/docker-${{ matrix.distro }}-ansible:latest"
          for i in {1..2}; do
            echo "Attempt manual $i of 2"
            if MOLECULE_DISTRO=${{ matrix.distro }} molecule -vv test -s manual; then
              break
            fi
            if [ $i -eq 2 ]; then
              echo "All 2 attempts for manual scenario failed"
              exit 1
            fi
            echo "Attempt manual $i failed, retrying..."
            sleep 15
          done
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}
          MOLECULE_NO_LOG: false

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: molecule-manual-${{ matrix.distro }}
          path: |
            molecule/*/molecule.yml
            molecule/*/*.log
            molecule/*/reports/

  molecule-uninstall:
    name: Molecule Uninstall
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        distro:
          - debian11
          - debian12
          - ubuntu2004
          - ubuntu2204
          - amazonlinux2
          - amazonlinux2023
          - rockylinux8
          - rockylinux9
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          ./scripts/setup-test-env.sh

      - name: Display versions
        run: |
          python3 -m venv venv
          source venv/bin/activate
          python --version
          ansible --version
          molecule --version

      - name: Run Uninstall Scenario
        run: |
          python3 -m venv venv
          source venv/bin/activate
          # Set MOLECULE_IMAGE based on the distro
          export MOLECULE_IMAGE="geerlingguy/docker-${{ matrix.distro }}-ansible:latest"
          for i in {1..2}; do
            echo "Attempt uninstall $i of 2"
            if MOLECULE_DISTRO=${{ matrix.distro }} molecule -vvv test -s uninstall; then
              break
            fi
            if [ $i -eq 2 ]; then
              echo "All 2 attempts for uninstall scenario failed"
              exit 1
            fi
            echo "Attempt uninstall $i failed, retrying..."
            sleep 15
          done
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}
          MOLECULE_NO_LOG: false

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: molecule-uninstall-${{ matrix.distro }}
          path: |
            molecule/*/molecule.yml
            molecule/*/*.log
            molecule/*/reports/
